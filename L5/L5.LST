Turbo Assembler	 Version 3.1	    04/09/24 09:46:32	    Page 1
l5.asm



      1	0000			     MYCODE SEGMENT 'CODE'
      2				     ;ЛР#5 2024	ЛАРКИН ИУ5-41Б Вар#11
      3				     ASSUME CS:MYCODE, DS:DTSEG, SS:STSEG
      4
      5				     ;ПЕРЕВОД СИМВОЛА В	HEX из AL
      6	0000			     HEX PROC
      7	0000  BF 0000r			 LEA DI, String
      8	0003  BB 000Dr			 MOV BX, OFFSET	hext
      9	0006  50			 PUSH AX
     10	0007  D0 E8 D0 E8 D0 E8	D0+	 SHR AL, 4
     11	      E8
     12	000F  D7			 XLAT
     13	0010  AA			 STOSB
     14	0011  58			 POP AX
     15	0012  50			 PUSH AX
     16	0013  24 0F			 AND AL, 00001111b
     17	0015  D7			 XLAT
     18	0016  AA			 STOSB
     19	0017  58			 POP AX
     20	0018  B8 0068			 MOV AX, 'h'
     21	001B  AB			 STOSW
     22	001C  B8 0024			 MOV AX, '$'
     23	001F  AB			 STOSW
     24	0020  BA 0000r			 LEA DX, STRING
     25	0023  C3			 RET
     26	0024			     HEX ENDP
     27
     28	0024			     GETCH PROC
     29	0024  B4 08			MOV AH,	08H
     30	0026  CD 21			INT 21H
     31	0028  C3			RET
     32	0029			     GETCH ENDP
     33
     34	0029			     CLSSCR PROC
     35	0029  53			  PUSH BX
     36	002A  51			  PUSH CX
     37	002B  50			  PUSH AX
     38	002C  B8 0600			  MOV	AX,0600H   ;Запрос на очистку экрана.
     39	002F  B7 07			  MOV	BH,07	   ;Нормальный атрибут (черно/белый).
     40	0031  B9 0000			  MOV	CX,0000	   ;Верхняя левая позиция.
     41	0034  BA 184F			  MOV	DX,184FH   ;Нижняя правая позиция.
     42	0037  CD 10			  INT	10H	   ;Передача управления	в BIOS.
     43	0039  58			  POP AX
     44	003A  59			  POP CX
     45	003B  5B			  POP BX
     46	003C  C3			  RET
     47	003D			     CLSSCR ENDP
     48
     49	003D			     PUTCH PROC
     50	003D  B4 02			 MOV AH, 02H
     51	003F  CD 21			 INT 21H
     52	0041  C3			 RET
     53	0042			     PUTCH ENDP
     54
     55	0042			     CLRF PROC
     56	0042  B2 0A			 MOV DL, 10
     57	0044  E8 FFF6			 CALL PUTCH
Turbo Assembler	 Version 3.1	    04/09/24 09:46:32	    Page 2
l5.asm



     58	0047  B2 0D			 MOV DL, 13
     59	0049  E8 FFF1			 CALL PUTCH
     60	004C  C3			 RET
     61	004D			     CLRF ENDP
     62
     63	004D			     PUTSTR PROC
     64	004D  B4 09			 MOV AH, 09h
     65	004F  CD 21			 INT 21H
     66	0051  C3			 RET
     67	0052			     PUTSTR ENDP
     68
     69				     ;Возвращает по адресу DS:DX буффер	строки
     70	0052			     GETSTRING PROC
     71	0052  BF 001Fr			 LEA DI, buffer	;DS:DX указывает на буффер строки
     72	0055  B9 0014			 MOV CX, 20
     73	0058				 CYCLE_INPUT:
     74	0058  E8 FFC9			     CALL GETCH
     75	005B  8B D0			     MOV DX, AX
     76	005D  E8 FFDD			     CALL PUTCH
     77	0060  3C 24			     CMP AL, '$'
     78	0062  74 09			     JE	endofstring
     79	0064  3A 06 0033r		     CMP AL, BREAK_SYMBOL
     80	0068  74 48			     JZ	term
     81	006A  AA			     STOSB
     82	006B  E2 EB			 LOOP CYCLE_INPUT
     83	006D				 endofstring:
     84	006D  B8 0014			     MOV AX, 20
     85	0070  2B C1			     SUB AX, CX
     86	0072  A3 001Dr			     MOV inputLength, AX
     87	0075  C3			 RET
     88	0076			     GETSTRING ENDP
     89
     90	0076			     MAIN PROC
     91				     ; Загрузка	регистров данных
     92	0076  B8 0000s			 MOV AX, DTSEG
     93	0079  8E D8			 MOV DS, AX
     94	007B  B8 0000s			 MOV AX, STSEG
     95	007E  8E D0			 MOV SS, AX
     96	0080  1E			 PUSH DS
     97	0081  07			 POP ES
     98				     ; Вывод символов на экран
     99	0082  E8 FFA4			 CALL CLSSCR
    100	0085  BA 0034r			 LEA DX, start
    101	0088  E8 FFC2			 CALL PUTSTR
    102	008B				 loopmain:
    103	008B  E8 FFB4			     CALL CLRF
    104	008E  E8 FFC1			     CALL GETSTRING
    105	0091  8B 0E 001Dr		     MOV CX, inputLength ;Число	символов
    106	0095  BE 001Fr			     lea SI, buffer
    107	0098  B2 3D			     MOV DL, '='
    108	009A  E8 FFA0			     CALL PUTCH
    109	009D				     loopstr:
    110	009D  AC				 LODSB
    111	009E  E8 FF5F				 CALL HEX
    112	00A1  B4 09				 MOV AH, 09h
    113	00A3  CD 21				 INT 21H
    114	00A5  E8 FF95				 CALL PUTCH
Turbo Assembler	 Version 3.1	    04/09/24 09:46:32	    Page 3
l5.asm



    115	00A8  E2 F3			     loop loopstr
    116	00AA  E8 FF77			     CALL GETCH
    117	00AD  E8 FF79			     CALL CLSSCR
    118	00B0  EB D9			     jmp loopmain
    119	00B2			     ENDP MAIN
    120				     ; Выход из	программы
    121	00B2			     term:
    122					  ;Выход с кодом 0
    123	00B2  B0 00			  MOV AL, 0
    124	00B4  B4 4C			  MOV AH, 4CH
    125	00B6  CD 21			  INT 21H
    126	00B8			     MYCODE ENDS
    127
    128	0000			     STSEG SEGMENT stack
    129	0000  80*(0000)			 dw 128	dup (0)
    130	0100			     STSEG ENDS
    131
    132	0000			     DTSEG SEGMENT
    133	0000  20 20 20 20 20 20	20+	 String	db '	       $',0
    134	      20 20 20 20 24 00
    135	000D  30 31 32 33 34 35	36+	 hext DB '0123456789ABCDEF'
    136	      37 38 39 41 42 43	44+
    137	      45 46
    138	001D  0014			 inputLength dw	20  ; number of	read characters
    139	001F  14*(00)			 buffer	db 20 DUP(0) ; actual buffer
    140	0033  2A			 BREAK_SYMBOL DB '*'	 ;Символ, по которому будет производится выход
    141	0034  82 A2 A5 A4 A8 E2	A5+	 start DB "Введите доллар для окончания	строки;	'*' - для окончания работы$"
    142	      20 A4 AE AB AB A0	E0+
    143	      20 A4 AB EF 20 AE	AA+
    144	      AE AD E7 A0 AD A8	EF+
    145	      20 E1 E2 E0 AE AA	A8+
    146	      3B 20 27 2A 27 20	2D+
    147	      20 A4 AB EF 20 AE	AA+
    148	      AE AD E7 A0 AD A8	EF+
    149	      20 E0 A0 A1 AE E2	EB+
    150	      24
    151	0074			     DTSEG ENDS
    152
    153				     END MAIN
Turbo Assembler	 Version 3.1	    04/09/24 09:46:32	    Page 4
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "04/09/24"
??FILENAME		Text   "l5	"
??TIME			Text   "09:46:32"
??VERSION		Number 030A
@CPU			Text   0101H
@CURSEG			Text   DTSEG			   #1  #128  #132
@FILENAME		Text   L5
@WORDSIZE		Text   2			   #1  #128  #132
BREAK_SYMBOL		Byte   DTSEG:0033		   79  #140
BUFFER			Byte   DTSEG:001F		   71  106  #139
CLRF			Near   MYCODE:0042		   #55	103
CLSSCR			Near   MYCODE:0029		   #34	99  117
CYCLE_INPUT		Near   MYCODE:0058		   #73	82
ENDOFSTRING		Near   MYCODE:006D		   78  #83
GETCH			Near   MYCODE:0024		   #28	74  116
GETSTRING		Near   MYCODE:0052		   #70	104
HEX			Near   MYCODE:0000		   #6  111
HEXT			Byte   DTSEG:000D		   8  #135
INPUTLENGTH		Word   DTSEG:001D		   86  105  #138
LOOPMAIN		Near   MYCODE:008B		   #102	 118
LOOPSTR			Near   MYCODE:009D		   #109	 115
MAIN			Near   MYCODE:0076		   #90	153
PUTCH			Near   MYCODE:003D		   #49	57  59	76  108	 114
PUTSTR			Near   MYCODE:004D		   #63	101
START			Byte   DTSEG:0034		   100	#141
STRING			Byte   DTSEG:0000		   7  24  #133
TERM			Near   MYCODE:00B2		   80  #121

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

DTSEG			16  0074 Para	none		   3  92  #132
MYCODE			16  00B8 Para	none	CODE	   #1  3
STSEG			16  0100 Para	Stack		   3  94  #128
